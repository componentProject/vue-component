import type { types, ColumnType } from '@/components/DraggableTable/_types'

const typeMap = {
  seq: '序号',
  checkbox: '复选框',
  radio: '单选框',
  expand: '展开行',
  html: '',
}

export function getTypeName(type?: types) {
  return type ? typeMap[type] : ''
}

export function handleGetColumn(Column: ColumnType): ColumnType {
  const {
    type,
    field,
    title,
    width,
    resizeWidth,
    minWidth,
    resizable,
    visible,
    fixed,
    align,
    headerAlign,
    footerAlign,
    showOverflow,
    showHeaderOverflow,
    showFooterOverflow,
    className,
    headerClassName,
    footerClassName,
    padding,
    verticalAlign,
    formatter,
    sortable,
    sortBy,
    sortType,
    filters,
    filterMultiple,
    filterMethod,
    filterResetMethod,
    filterRecoverMethod,
    filterRender,
    headerExportMethod,
    exportMethod,
    footerExportMethod,
    titlePrefix,
    titleSuffix,
    aggFunc,
    cellType,
    cellRender,
    editRender,
    contentRender,
    treeNode,
    params,
    colId,
    children,
    slots,
    options,
  } = Column
  return {
    type,
    field,
    title,
    width: resizeWidth ? Math.ceil(resizeWidth) : width,
    minWidth,
    resizable,
    visible,
    fixed,
    align,
    headerAlign,
    footerAlign,
    showOverflow,
    showHeaderOverflow,
    showFooterOverflow,
    className,
    headerClassName,
    footerClassName,
    padding,
    verticalAlign,
    formatter,
    sortable: sortable ?? false,
    sortBy,
    sortType: sortType ?? 'auto',
    filters: filters?.map((filter) => {
      const { label, data, value, checked = false, resetValue } = filter
      return { label, data, value, checked, resetValue }
    }) as ColumnType['filters'],
    filterMultiple: filterMultiple ?? true,
    filterMethod,
    filterResetMethod,
    filterRecoverMethod,
    filterRender,
    headerExportMethod,
    exportMethod,
    footerExportMethod,
    titlePrefix,
    titleSuffix,
    aggFunc,
    cellType,
    cellRender,
    editRender,
    contentRender,
    treeNode: treeNode ?? false,
    params,
    colId,
    children,
    slots,
    options,
  }
}
